{"ast":null,"code":"var _jsxFileName = \"F:\\\\My-Portfolio\\\\src\\\\components\\\\SkillSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport \"./SkillSection.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SkillSection = () => {\n  _s();\n  const skills = useMemo(() => [{\n    name: \"HTML - 5\",\n    percentage: 70\n  }, {\n    name: \"CSS - 3\",\n    percentage: 50\n  }, {\n    name: \"Tailwind\",\n    percentage: 40\n  }, {\n    name: \"JavaScript\",\n    percentage: 25\n  }, {\n    name: \"React\",\n    percentage: 10\n  }, {\n    name: \"MongoDB\",\n    percentage: 25\n  }], []);\n  const [animatedPercentages, setAnimatedPercentages] = useState(skills.map(() => 0));\n  useEffect(() => {\n    skills.forEach((skill, index) => {\n      let currentPercent = 0;\n      const interval = setInterval(() => {\n        if (currentPercent <= skill.percentage) {\n          setAnimatedPercentages(prev => {\n            const newPercentages = [...prev];\n            newPercentages[index] = currentPercent;\n            return newPercentages;\n          });\n          currentPercent++;\n        } else {\n          clearInterval(interval);\n        }\n      }, 15);\n    });\n  }, [skills]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"skill-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"skill-heading\",\n      children: \"My Skills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skills-container\",\n      children: skills.map((skill, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skill\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            background: `conic-gradient(#FF520E ${animatedPercentages[index] * 3.6}deg, #333 0deg)`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner-content\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"percentage\",\n              children: [animatedPercentages[index], \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skill-name\",\n          children: skill.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(SkillSection, \"k/vxNbYQrqHjTprrhDRJs8RSIW8=\");\n_c = SkillSection;\nexport default SkillSection;\nvar _c;\n$RefreshReg$(_c, \"SkillSection\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","jsxDEV","_jsxDEV","SkillSection","_s","skills","name","percentage","animatedPercentages","setAnimatedPercentages","map","forEach","skill","index","currentPercent","interval","setInterval","prev","newPercentages","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","background","_c","$RefreshReg$"],"sources":["F:/My-Portfolio/src/components/SkillSection.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport \"./SkillSection.css\";\n\nconst SkillSection = () => {\n  const skills = useMemo(\n    () => [\n      { name: \"HTML - 5\", percentage: 70 },\n      { name: \"CSS - 3\", percentage: 50 },\n      { name: \"Tailwind\", percentage: 40 },\n      { name: \"JavaScript\", percentage: 25 },\n      { name: \"React\", percentage: 10},\n      { name: \"MongoDB\", percentage: 25},\n    ],\n    []\n  );\n\n  const [animatedPercentages, setAnimatedPercentages] = useState(\n    skills.map(() => 0)\n  );\n\n  useEffect(() => {\n    skills.forEach((skill, index) => {\n      let currentPercent = 0;\n      const interval = setInterval(() => {\n        if (currentPercent <= skill.percentage) {\n          setAnimatedPercentages((prev) => {\n            const newPercentages = [...prev];\n            newPercentages[index] = currentPercent;\n            return newPercentages;\n          });\n          currentPercent++;\n        } else {\n          clearInterval(interval);\n        }\n      }, 15);\n    });\n  }, [skills]);\n\n  return (\n    <section className=\"skill-section\">\n      <h2 className=\"skill-heading\">My Skills</h2>\n      <div className=\"skills-container\">\n        {skills.map((skill, index) => (\n          <div key={index} className=\"skill\">\n            <div\n              className=\"progress-bar\"\n              style={{\n                background: `conic-gradient(#FF520E ${animatedPercentages[index] * 3.6}deg, #333 0deg)`,\n              }}\n            >\n              <div className=\"inner-content\">\n                <span className=\"percentage\">{animatedPercentages[index]}%</span>\n              </div>\n            </div>\n            <div className=\"skill-name\">{skill.name}</div>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default SkillSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}